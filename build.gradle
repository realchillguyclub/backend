plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.7'

    // REST Docs
    id "org.asciidoctor.jvm.convert" version "3.3.2"
    id 'com.epages.restdocs-api-spec' version '0.19.2'
    id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'com.rcgc'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // WEB
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'
    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // REST Docs & Swagger
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.19.2'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:3.0.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
}

// REST Docs & Swagger 설정
ext {
    snippetsDir = file('build/generated-snippets')
}

tasks.named('test') {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

sourceSets {
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

def serverUrl = "http://localhost:8085"

openapi3 {
    server = serverUrl
    title = "ILLDAN API Documentation"
    description = "Spring REST Docs with Swagger UI."
    version = "1.0.0"
    outputFileNamePrefix = 'open-api-3.0.1'
    format = 'json'
    outputDirectory = 'build/resources/main/static/docs'
}

tasks.withType(GenerateSwaggerUI).configureEach {
    dependsOn 'openapi3'

    delete file('src/main/resources/static/docs/')
    copy {
        from "build/resources/main/static/docs"
        into "src/main/resources/static/docs/"
    }
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

tasks.named("bootJar") {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
    dependsOn ':openapi3'
}

tasks.register('copyDocument', Copy) {
    dependsOn asciidoctor
    from file(project.layout.buildDirectory.dir("docs/asciidoc").get().asFile.path)
    into file("src/main/resources/static/docs")
}

tasks.named("build") {
    dependsOn copyDocument
}
